{"ast":null,"code":"var _jsxFileName = \"/Users/anushka/Desktop/sgms/client/src/components/groupdocuments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupDocuments = ({\n  groupId\n}) => {\n  _s();\n  const [documents, setDocuments] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  //   useEffect(() => {\n  //     const fetchDocuments = async () => {\n  //       setLoading(true);\n  //       setError(null);\n\n  //       try {\n  //         const res = await axios.get(`/api/documents/${groupId}/documents`, {\n  //           headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n  //         });\n\n  //         if (Array.isArray(res.data)) {\n  //           setDocuments(res.data);\n  //         } else {\n  //           setError('Invalid data format');\n  //         }\n  //       } catch (err) {\n  //         setError('Failed to fetch documents');\n  //       } finally {\n  //         setLoading(false);\n  //       }\n  //     };\n\n  //     fetchDocuments();\n  //   }, [groupId]);\n\n  useEffect(() => {\n    const fetchDocuments = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        console.log(\"Fetching documents for group:\", groupId);\n        const res = await axios.get(`/api/documents/${groupId}/documents`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        console.log(\"Response:\", res.data);\n        if (Array.isArray(res.data)) {\n          setDocuments(res.data);\n        } else {\n          console.log(\"Invalid response format\", res.data);\n          setError('Invalid data format');\n        }\n      } catch (err) {\n        var _err$response;\n        console.error('Fetch documents error:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        setError('Failed to fetch documents');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDocuments();\n  }, [groupId]);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const res = await axios.post(`/api/documents/${groupId}/upload`, formData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Refetch documents after upload\n      const updatedRes = await axios.get(`/api/documents/${groupId}/documents`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setDocuments(updatedRes.data);\n    } catch (err) {\n      setError('Upload failed');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-documents\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: documents.map(document => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: document.filePath,\n          download: true,\n          children: document.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Uploaded by: \", document.uploaderId.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, document._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupDocuments, \"MOdBWRFzBMn9y7y0SsRCGpMG8Po=\");\n_c = GroupDocuments;\nexport default GroupDocuments;\nvar _c;\n$RefreshReg$(_c, \"GroupDocuments\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","GroupDocuments","groupId","_s","documents","setDocuments","selectedFile","setSelectedFile","loading","setLoading","error","setError","fetchDocuments","console","log","res","get","headers","Authorization","localStorage","getItem","data","Array","isArray","err","_err$response","response","message","handleFileChange","e","target","files","handleUpload","preventDefault","formData","FormData","append","post","updatedRes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","onChange","map","document","href","filePath","download","uploaderId","name","_id","_c","$RefreshReg$"],"sources":["/Users/anushka/Desktop/sgms/client/src/components/groupdocuments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst GroupDocuments = ({ groupId }) => {\n  const [documents, setDocuments] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchDocuments = async () => {\n//       setLoading(true);\n//       setError(null);\n      \n//       try {\n//         const res = await axios.get(`/api/documents/${groupId}/documents`, {\n//           headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n//         });\n        \n//         if (Array.isArray(res.data)) {\n//           setDocuments(res.data);\n//         } else {\n//           setError('Invalid data format');\n//         }\n//       } catch (err) {\n//         setError('Failed to fetch documents');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n    \n//     fetchDocuments();\n//   }, [groupId]);\n\nuseEffect(() => {\n    const fetchDocuments = async () => {\n      setLoading(true);\n      setError(null);\n  \n      try {\n        console.log(\"Fetching documents for group:\", groupId);\n        const res = await axios.get(`/api/documents/${groupId}/documents`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n        });\n  \n        console.log(\"Response:\", res.data);\n  \n        if (Array.isArray(res.data)) {\n          setDocuments(res.data);\n        } else {\n          console.log(\"Invalid response format\", res.data);\n          setError('Invalid data format');\n        }\n      } catch (err) {\n        console.error('Fetch documents error:', err.response?.data || err.message);\n        setError('Failed to fetch documents');\n      } finally {\n        setLoading(false);\n      }\n    };\n  \n    fetchDocuments();\n  }, [groupId]);\n  \n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    \n    if (!selectedFile) return;\n    \n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    try {\n      const res = await axios.post(`/api/documents/${groupId}/upload`, formData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      \n      // Refetch documents after upload\n      const updatedRes = await axios.get(`/api/documents/${groupId}/documents`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      setDocuments(updatedRes.data);\n    } catch (err) {\n      setError('Upload failed');\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"group-documents\">\n      <h3>Documents</h3>\n      <form onSubmit={handleUpload}>\n        <input type=\"file\" onChange={handleFileChange} />\n        <button type=\"submit\">Upload</button>\n      </form>\n      <ul>\n        {documents.map(document => (\n          <li key={document._id}>\n            <a href={document.filePath} download>{document.fileName}</a>\n            <span>Uploaded by: {document.uploaderId.name}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default GroupDocuments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}