{"ast":null,"code":"var _jsxFileName = \"/Users/anushka/Desktop/sgms/client/src/components/grouplist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GroupCard from './groupcard'; // Adjust import path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupsList = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [joiningId, setJoiningId] = useState(null);\n\n  // Get current user ID from localStorage\n  const currentUserId = localStorage.getItem('userId');\n\n  // Fetch groups on component mount\n  const fetchGroups = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('/api/groups/list', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setGroups(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load groups');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 2. Use it in useEffect\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n\n  // Handle join group functionality\n  const handleJoinGroup = async groupId => {\n    try {\n      setJoiningId(groupId);\n      setError(null);\n      const token = localStorage.getItem('token');\n      const response = await axios.post(`/api/groups/${groupId}/join`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Update the groups list with the new member\n      setGroups(groups.map(group => group._id === groupId ? response.data : group));\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError({\n        groupId,\n        message: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to join group'\n      });\n    } finally {\n      setJoiningId(null);\n    }\n  };\n  const handleJoinRequest = async groupId => {\n    try {\n      await axios.post(`/api/groups/${groupId}/request`, {}, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      // Refresh groups list\n      fetchGroups();\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError({\n        groupId,\n        message: ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Request failed'\n      });\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading groups...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"groups-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Study Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups-grid\",\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(GroupCard, {\n        group: group,\n        currentUserId: currentUserId,\n        onJoinGroup: handleJoinGroup,\n        onJoinRequest: handleJoinRequest,\n        joiningId: joiningId,\n        error: error\n      }, group._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), groups.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-groups\",\n      children: \"No study groups available to join.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupsList, \"s3v2JWzqnThYn82aPORYcusWZoM=\");\n_c = GroupsList;\nexport default GroupsList;\nvar _c;\n$RefreshReg$(_c, \"GroupsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","GroupCard","jsxDEV","_jsxDEV","GroupsList","_s","groups","setGroups","loading","setLoading","error","setError","joiningId","setJoiningId","currentUserId","localStorage","getItem","fetchGroups","token","response","get","headers","Authorization","data","err","_err$response","_err$response$data","message","handleJoinGroup","groupId","post","map","group","_id","_err$response2","_err$response2$data","handleJoinRequest","_err$response3","_err$response3$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onJoinGroup","onJoinRequest","length","_c","$RefreshReg$"],"sources":["/Users/anushka/Desktop/sgms/client/src/components/grouplist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GroupCard from './groupcard'; // Adjust import path as needed\n\nconst GroupsList = () => {\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [joiningId, setJoiningId] = useState(null);\n  \n  // Get current user ID from localStorage\n  const currentUserId = localStorage.getItem('userId');\n\n  // Fetch groups on component mount\n  const fetchGroups = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('/api/groups/list', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      setGroups(response.data);\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to load groups');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 2. Use it in useEffect\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n\n  // Handle join group functionality\n  const handleJoinGroup = async (groupId) => {\n    try {\n      setJoiningId(groupId);\n      setError(null);\n      const token = localStorage.getItem('token');\n      \n      const response = await axios.post(`/api/groups/${groupId}/join`, {}, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      // Update the groups list with the new member\n      setGroups(groups.map(group => \n        group._id === groupId ? response.data : group\n      ));\n    } catch (err) {\n      setError({\n        groupId,\n        message: err.response?.data?.message || 'Failed to join group'\n      });\n    } finally {\n      setJoiningId(null);\n    }\n  };\n\n  const handleJoinRequest = async (groupId) => {\n    try {\n      await axios.post(`/api/groups/${groupId}/request`, {}, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      // Refresh groups list\n      fetchGroups();\n    } catch (err) {\n      setError({\n        groupId,\n        message: err.response?.data?.error || 'Request failed'\n      });\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading groups...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"groups-list\">\n      <h2>Available Study Groups</h2>\n      \n      <div className=\"groups-grid\">\n        {groups.map(group => (\n          <GroupCard\n            key={group._id}\n            group={group}\n            currentUserId={currentUserId}\n            onJoinGroup={handleJoinGroup}\n            onJoinRequest={handleJoinRequest}\n            joiningId={joiningId}\n            error={error}\n          />\n        ))}\n      </div>\n      \n      {groups.length === 0 && (\n        <p className=\"no-groups\">No study groups available to join.</p>\n      )}\n    </div>\n  );\n};\n\nexport default GroupsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}