{"ast":null,"code":"var _jsxFileName = \"/Users/anushka/Desktop/sgms/client/src/components/grouppage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport GroupDocuments from './groupdocuments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupPage = () => {\n  _s();\n  const {\n    groupId\n  } = useParams();\n  const [group, setGroup] = useState({});\n  useEffect(() => {\n    const fetchGroup = async () => {\n      try {\n        const res = await axios.get(`/api/groups/${groupId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setGroup(res.data);\n      } catch (err) {\n        console.error('Fetch error:', err);\n      }\n    };\n    fetchGroup();\n  }, [groupId]);\n\n  // Add a conditional check to ensure group is populated\n  if (!group || Object.keys(group).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: group.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Subject: \", group.subject]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), group.members && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Members: \", group.members.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GroupDocuments, {\n      groupId: groupId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupPage, \"ay1eqzykptGyBOdOrhwrm/U3D2c=\", false, function () {\n  return [useParams];\n});\n_c = GroupPage;\nexport default GroupPage;\nvar _c;\n$RefreshReg$(_c, \"GroupPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","GroupDocuments","jsxDEV","_jsxDEV","GroupPage","_s","groupId","group","setGroup","fetchGroup","res","get","headers","Authorization","localStorage","getItem","data","err","console","error","Object","keys","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","subject","members","_c","$RefreshReg$"],"sources":["/Users/anushka/Desktop/sgms/client/src/components/grouppage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport GroupDocuments from './groupdocuments';\n\nconst GroupPage = () => {\n  const { groupId } = useParams();\n  const [group, setGroup] = useState({});\n\n  useEffect(() => {\n    const fetchGroup = async () => {\n      try {\n        const res = await axios.get(`/api/groups/${groupId}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n        });\n        setGroup(res.data);\n      } catch (err) {\n        console.error('Fetch error:', err);\n      }\n    };\n    \n    fetchGroup();\n  }, [groupId]);\n\n  // Add a conditional check to ensure group is populated\n  if (!group || Object.keys(group).length === 0) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"group-page\">\n      <h2>{group.name}</h2>\n      <p>Subject: {group.subject}</p>\n      \n      {/* Or use explicit checks */}\n      {group.members && (\n        <p>Members: {group.members.length}</p>\n      )}\n      <GroupDocuments groupId={groupId} />\n    </div>\n  );\n};\n\nexport default GroupPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAQ,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,eAAeL,OAAO,EAAE,EAAE;UACpDM,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UAAG;QACtE,CAAC,CAAC;QACFP,QAAQ,CAACE,GAAG,CAACM,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,GAAG,CAAC;MACpC;IACF,CAAC;IAEDR,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;;EAEb;EACA,IAAI,CAACC,KAAK,IAAIa,MAAM,CAACC,IAAI,CAACd,KAAK,CAAC,CAACe,MAAM,KAAK,CAAC,EAAE;IAC7C,oBAAOnB,OAAA;MAAAoB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACExB,OAAA;IAAKyB,SAAS,EAAC,YAAY;IAAAL,QAAA,gBACzBpB,OAAA;MAAAoB,QAAA,EAAKhB,KAAK,CAACsB;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBxB,OAAA;MAAAoB,QAAA,GAAG,WAAS,EAAChB,KAAK,CAACuB,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAG9BpB,KAAK,CAACwB,OAAO,iBACZ5B,OAAA;MAAAoB,QAAA,GAAG,WAAS,EAAChB,KAAK,CAACwB,OAAO,CAACT,MAAM;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACtC,eACDxB,OAAA,CAACF,cAAc;MAACK,OAAO,EAAEA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACtB,EAAA,CApCID,SAAS;EAAA,QACOJ,SAAS;AAAA;AAAAgC,EAAA,GADzB5B,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}